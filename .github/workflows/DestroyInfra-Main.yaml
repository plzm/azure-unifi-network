---
name: Destroy Infrastructure-Main

on: 
  workflow_dispatch:

jobs:
  destroy-infra-main:
    name: Destroy Infrastructure - Main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Azure CLI extensions to auto-install
        if: success()
        run: |
          $output = az config set extension.use_dynamic_install=yes_without_prompt | ConvertFrom-Json

          Write-Debug -Debug:$true -Message "$output"
        shell: pwsh

      - name: Azure login
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Set Config File Paths to Environment
        if: success()
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"

          . ./scripts/infra/Utility.ps1

          Set-EnvVar2 -VarName "AA_CONFIG_FILE_INFRA_CONSTANTS" -VarValue "./config/infra_constants.json"
          Set-EnvVar2 -VarName "AA_CONFIG_FILE_INFRA_MAIN" -VarValue ("./config/infra_main.json")


      - name: Set Variables and write to Environment - Main
        if: success()
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"

          . ./scripts/infra/Utility.ps1
          . ./scripts/infra/Network.ps1
          . ./scripts/infra/Variables.ps1

          $ConfigConstants = Get-ConfigFromFile -ConfigFilePath "${{ env.AA_CONFIG_FILE_INFRA_CONSTANTS }}"
          $ConfigMain = Get-ConfigFromFile -ConfigFilePath "${{ env.AA_CONFIG_FILE_INFRA_MAIN }}"
          $SubscriptionId = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

          Set-VariablesMain `
            -ConfigConstants $ConfigConstants `
            -ConfigMain $ConfigMain `
            -SubscriptionId $SubscriptionId


      - name: Delete Diagnostics Settings
        if: success()
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"

          . ./scripts/infra/Utility.ps1
          . ./scripts/infra/Security.ps1

          $configConstants = Get-ConfigFromFile -ConfigFilePath "${{ env.AA_CONFIG_FILE_INFRA_CONSTANTS }}"
          $configMain = Get-ConfigFromFile -ConfigFilePath "${{ env.AA_CONFIG_FILE_INFRA_MAIN }}"


      - name: Delete UAI Role Assignments
        if: success()
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"

          . ./scripts/infra/Utility.ps1
          . ./scripts/infra/Security.ps1

          $configConstants = Get-ConfigFromFile -ConfigFilePath "${{ env.AA_CONFIG_FILE_INFRA_CONSTANTS }}"
          $configMain = Get-ConfigFromFile -ConfigFilePath "${{ env.AA_CONFIG_FILE_INFRA_MAIN }}"

          $uaiName = "${{ env.AA_UAI_NAME_MAIN }}"
          Write-Debug -Debug:$true -Message "Get UAI $uaiName"
          $uai = "$(az identity show -g ${{ env.AA_RG_NAME_MAIN }} -n $uaiName)" | ConvertFrom-Json

          $output = Remove-RoleAssignmentsSub `
            -SubscriptionId "${{ secrets.AZURE_SUBSCRIPTION_ID }}" `
            -PrincipalId $uai.principalId
 
          Write-Debug -Debug:$true -Message "$output"


      - name: Delete Resource Groups
        if: success()
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"

          . ./scripts/infra/Utility.ps1

          $configConstants = Get-ConfigFromFile -ConfigFilePath "${{ env.AA_CONFIG_FILE_INFRA_CONSTANTS }}"
          $configMain = Get-ConfigFromFile -ConfigFilePath "${{ env.AA_CONFIG_FILE_INFRA_MAIN }}"

          $rgExists = $null

          [bool]::TryParse("$(az group exists -g ${{ env.AA_RG_NAME_MAIN }})", [ref]$rgExists) | Out-Null
          if ($rgExists)
          {
            az group delete -y `
              --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}" `
              -n "${{ env.AA_RG_NAME_MAIN }}"
          }

...